# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
#        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    admin.patient:
        class: AppBundle\Admin\PatientAdmin
        arguments: [~, AppBundle\Entity\Patient, ~]
        calls:
            - [setUserManager, ['@fos_user.user_manager']]
            - [setModelManager,['@AppBundle\AdminProxy\PatientModelManagerProxy']]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Patient }
        public: true

    admin.ticket:
        class: AppBundle\Admin\TicketAdmin
        arguments: [~, AppBundle\Entity\Ticket, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Admin, label: Ticket }
        public: true

    admin.doctor:
        class: AppBundle\Admin\DoctorAdmin
        arguments: [~, AppBundle\Entity\Doctor, ~]
        calls:
            - [setUserManager, ['@fos_user.user_manager']]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Doctor }
        public: true

    admin.medicine:
        class: AppBundle\Admin\MedicineAdmin
        arguments: [~, AppBundle\Entity\Medicine, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Medicine }
        public: true

    admin.disease:
        class: AppBundle\Admin\DiseaseAdmin
        arguments: [~, AppBundle\Entity\Disease, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Disease }
        public: true

    admin.history:
        class: AppBundle\Admin\HistoryAdmin
        arguments: [~, AppBundle\Entity\History, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: History }
        public: true

    admin.symptoms:
        class: AppBundle\Admin\SymptomsAdmin
        arguments: [~, AppBundle\Entity\Symptoms, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Symptoms }
        public: true

    admin.specialty:
        class: AppBundle\Admin\SpecialtyAdmin
        arguments: [~, AppBundle\Entity\Specialty, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Specialty }
        public: true

    admin.schedule:
        class: AppBundle\Admin\ScheduleAdmin
        arguments: [~, AppBundle\Entity\Schedule, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Schedule }
        public: true

    admin.room:
        class: AppBundle\Admin\RoomAdmin
        arguments: [~, AppBundle\Entity\Room, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Room }
        public: true

    admin.equipment:
        class: AppBundle\Admin\EquipmentAdmin
        arguments: [~, AppBundle\Entity\Equipment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: Admin, label: Equipment }
        public: true

    admin.user:
        class: AppBundle\Admin\User\UserAdmin
        arguments: [~, AppBundle\Entity\Users\User, ~]
        calls:
            - [setModelManager, ['@AppBundle\AdminProxy\UserModelManagerProxy']]
        tags:
            - { name: sonata.admin, manager_type: orm,  group: User, label: User }
        public: true

    AppBundle\AdminProxy\UserModelManagerProxy:
        class:  AppBundle\AdminProxy\UserModelManagerProxy
        parent: 'sonata.admin.manager.orm'
        autowire: false
        calls:
            - [setUserManager, ['@fos_user.user_manager']]
        public: true

    AppBundle\AdminProxy\PatientModelManagerProxy:
        class:  AppBundle\AdminProxy\PatientModelManagerProxy
        parent: 'sonata.admin.manager.orm'
        autowire: false
        calls:
            - [setPatientRepository, ['@AppBundle\Repository\PatientRepository']]
        public: true

    AppBundle\Repository\PatientRepository:
        class: AppBundle\Repository\PatientRepository
        factory: ['@doctrine.orm.default_entity_manager','getRepository']
        arguments: ['AppBundle\Entity\Patient']
        calls:
            - [setUserManager, ['@fos_user.user_manager']]